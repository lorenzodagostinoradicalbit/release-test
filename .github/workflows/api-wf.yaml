name: api-wf
on:
  push:
    tags:
      - 'v*.*.*'
    branches:
    - "main"
  pull_request:
    branches:
    - "*"

env:
  POETRY_VERSION: "1.8.3"
  PYTHON_VERSION: "3.11"

jobs:
  test:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Setup poetry
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_VERSION=${{ env.POETRY_VERSION }} python -
          poetry lock
      - name: Install dependencies
        run: |
          poetry install
      - name: Ruff Format
        run: |
          poetry run ruff check
      - name: Run tests
        run: |
          poetry run pytest -v

  format-version:
    needs: [test]
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.format-version.outputs.version }}
    steps:
      - id: format-version
        run: |
          export version=${{ github.ref_name }}
          if [[ $version =~ v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            echo "version=${version#v}" >> $GITHUB_OUTPUT
          else
            echo "version=${version}" >> $GITHUB_OUTPUT
          fi
  echo-labels:
    needs: [test, format-version]
    runs-on: ubuntu-22.04
    steps:
      - name: Echo labels
        run: |
          echo ${{ github.event.head_commit.message }}
          echo ${{ github.event_name }}
          echo ${{ github.ref_name }}
          export labels=${{ github.event.pull_request.labels }}
          echo $labels
          for label in $labels; do
            echo $label
          done
    
  build-be:
    needs: [test, format-version]
    # if: ${{ github.event_name == 'push' || ( github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'autorelease:pending') ) }}
    uses: ./.github/workflows/docker.yaml
    with:
      push: ${{ github.event_name != 'pull_request' }}
      context: ./api
      image: test-be
      tag: ${{ startsWith(github.ref, 'refs/tags/v') && needs.format-version.outputs.version || 'latest' }}
    secrets:
      USERNAME: ${{ secrets.DOCKER_HUB_USER }}
      PASSWORD: ${{ secrets.DOCKER_HUB_PAT }}
      ORGANIZATION: ${{ secrets.DOCKER_HUB_ORG }}        